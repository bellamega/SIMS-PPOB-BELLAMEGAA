{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';// Import useNavigate\nimport InputField from'./InputField';import'./styles/RegisterForm.css';import illustration from'./assets/illustrator.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RegisterForm=()=>{const[firstName,setFirstName]=useState('');const[lastName,setLastName]=useState('');const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[error,setError]=useState('');const navigate=useNavigate();// Initialize useNavigate\nconst handleSubmit=e=>{e.preventDefault();setError('');// Reset error messages\n// Validate email format\nconst emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;if(!emailRegex.test(email)){setError('Format email tidak valid.');return;}// Validate password length\nif(password.length<8){setError('Password harus memiliki panjang minimal 8 karakter.');return;}// Validate first and last name\nif(!firstName.trim()||!lastName.trim()){setError('Nama depan dan nama belakang tidak boleh kosong.');return;}// Validate confirm password\nif(password!==confirmPassword){setError('Password dan konfirmasi password tidak cocok.');return;}// If all validations pass, send data to API\nconst requestData={email,first_name:firstName,last_name:lastName,password};console.log(requestData);// Check data being sent\n// Corrected API URL\nfetch(\"https://take-home-test-api.nutech-integrasi.com/registration\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(requestData)// Send requestData as JSON\n}).then(response=>{if(!response.ok){throw new Error(\"Gagal melakukan registrasi.\");}return response.json();// Parse response as JSON\n}).then(data=>{console.log(data);// Check API response\nif(data.status===0){alert(\"Registrasi berhasil silahkan login\");navigate(\"/login\");// Redirect to login after successful registration\n}else if(data.status===102){setError(\"Email sudah terdaftar. Silakan coba email lain.\");}else{setError(data.message||\"Registrasi gagal. Coba lagi.\");}}).catch(error=>{setError(\"Terjadi kesalahan. Silakan coba lagi.\");console.error(\"Error:\",error);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"registerContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"formContainer\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"SIMS PPOB\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Lengkap data untuk membuat akun\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),\" \",/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(InputField,{label:\"Email\",type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(InputField,{label:\"Nama Depan\",type:\"text\",placeholder:\"Nama Depan\",value:firstName,onChange:e=>setFirstName(e.target.value)}),/*#__PURE__*/_jsx(InputField,{label:\"Nama Belakang\",type:\"text\",placeholder:\"Nama Belakang\",value:lastName,onChange:e=>setLastName(e.target.value)}),/*#__PURE__*/_jsx(InputField,{label:\"Buat Password\",type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(InputField,{label:\"Konfirmasi Password\",type:\"password\",placeholder:\"Konfirmasi Password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"button-red\",disabled:!email||!firstName||!lastName||password.length<8||password!==confirmPassword,children:\"Registrasi\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Sudah punya akun? \",/*#__PURE__*/_jsx(\"a\",{href:\"/\",children:\"Login di sini\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"illustrationContainer\",children:/*#__PURE__*/_jsx(\"img\",{src:illustration,alt:\"Illustration\",className:\"illustration\"})})]});};export default RegisterForm;","map":{"version":3,"names":["React","useState","useNavigate","InputField","illustration","jsx","_jsx","jsxs","_jsxs","RegisterForm","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","navigate","handleSubmit","e","preventDefault","emailRegex","test","length","trim","requestData","first_name","last_name","console","log","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","status","alert","message","catch","className","children","onSubmit","label","type","placeholder","value","onChange","target","disabled","href","src","alt"],"sources":["C:/Users/ASUS/sims-ppob-bellamega1/src/components/RegisterForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\nimport InputField from './InputField';\r\nimport './styles/RegisterForm.css';\r\nimport illustration from './assets/illustrator.png';\r\n\r\nconst RegisterForm = () => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError(''); // Reset error messages\r\n  \r\n    // Validate email format\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      setError('Format email tidak valid.');\r\n      return;\r\n    }\r\n  \r\n    // Validate password length\r\n    if (password.length < 8) {\r\n      setError('Password harus memiliki panjang minimal 8 karakter.');\r\n      return;\r\n    }\r\n  \r\n    // Validate first and last name\r\n    if (!firstName.trim() || !lastName.trim()) {\r\n      setError('Nama depan dan nama belakang tidak boleh kosong.');\r\n      return;\r\n    }\r\n  \r\n    // Validate confirm password\r\n    if (password !== confirmPassword) {\r\n      setError('Password dan konfirmasi password tidak cocok.');\r\n      return;\r\n    }\r\n  \r\n    // If all validations pass, send data to API\r\n    const requestData = {\r\n      email,\r\n      first_name: firstName,\r\n      last_name: lastName,\r\n      password,\r\n    };\r\n  \r\n    console.log(requestData); // Check data being sent\r\n  \r\n    // Corrected API URL\r\n    fetch(\"https://take-home-test-api.nutech-integrasi.com/registration\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(requestData), // Send requestData as JSON\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Gagal melakukan registrasi.\");\r\n        }\r\n        return response.json(); // Parse response as JSON\r\n      })\r\n      .then((data) => {\r\n        console.log(data); // Check API response\r\n        if (data.status === 0) {\r\n          alert(\"Registrasi berhasil silahkan login\");\r\n          navigate(\"/login\"); // Redirect to login after successful registration\r\n        } else if (data.status === 102) {\r\n          setError(\"Email sudah terdaftar. Silakan coba email lain.\");\r\n        } else {\r\n          setError(data.message || \"Registrasi gagal. Coba lagi.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setError(\"Terjadi kesalahan. Silakan coba lagi.\");\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"registerContainer\">\r\n      <div className=\"formContainer\">\r\n        <h1>SIMS PPOB</h1>\r\n        <p>Lengkap data untuk membuat akun</p>\r\n        {error && <p className=\"error\">{error}</p>} {/* Tampilkan error jika ada */}\r\n        <form onSubmit={handleSubmit}>\r\n          <InputField label=\"Email\" type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          <InputField label=\"Nama Depan\" type=\"text\" placeholder=\"Nama Depan\" value={firstName} onChange={(e) => setFirstName(e.target.value)} />\r\n          <InputField label=\"Nama Belakang\" type=\"text\" placeholder=\"Nama Belakang\" value={lastName} onChange={(e) => setLastName(e.target.value)} />\r\n          <InputField label=\"Buat Password\" type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n          <InputField label=\"Konfirmasi Password\" type=\"password\" placeholder=\"Konfirmasi Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"button-red\"\r\n            disabled={ !email || !firstName || !lastName || password.length < 8 || password !== confirmPassword }\r\n          >\r\n            Registrasi\r\n          </button>\r\n        </form>\r\n        <p>Sudah punya akun? <a href=\"/\">Login di sini</a></p>\r\n      </div>\r\n      <div className=\"illustrationContainer\">\r\n        <img src={illustration} alt=\"Illustration\" className=\"illustration\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}