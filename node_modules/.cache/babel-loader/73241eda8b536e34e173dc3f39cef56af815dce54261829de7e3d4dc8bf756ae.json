{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\sims-ppob-bellamega1\\\\src\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  setIsLoggedIn\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Assume login API logic here\n    const response = await fetch('https://your-api/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.ok) {\n      const data = await response.json();\n      if (data.status === 0) {\n        // On successful login, set the login state and navigate to home\n        setIsLoggedIn(); // This will update isLoggedIn state and localStorage\n        navigate('/home');\n      } else {\n        // Handle login failure\n        alert(data.message || 'Login failed');\n      }\n    } else {\n      alert('Login failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginForm","setIsLoggedIn","_s","email","setEmail","password","setPassword","navigate","handleSubmit","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","ok","data","json","status","alert","message","onSubmit","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/sims-ppob-bellamega1/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LoginForm = ({ setIsLoggedIn }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Assume login API logic here\r\n    const response = await fetch('https://your-api/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, password }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      if (data.status === 0) {\r\n        // On successful login, set the login state and navigate to home\r\n        setIsLoggedIn();  // This will update isLoggedIn state and localStorage\r\n        navigate('/home');\r\n      } else {\r\n        // Handle login failure\r\n        alert(data.message || 'Login failed');\r\n      }\r\n    } else {\r\n      alert('Login failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* Add your form fields here */}\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;MACrDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEb,KAAK;QAAEE;MAAS,CAAC,CAAC;MACzCY,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IAEF,IAAIN,QAAQ,CAACO,EAAE,EAAE;MACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;QACrB;QACApB,aAAa,CAAC,CAAC,CAAC,CAAE;QAClBM,QAAQ,CAAC,OAAO,CAAC;MACnB,CAAC,MAAM;QACL;QACAe,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,cAAc,CAAC;MACvC;IACF,CAAC,MAAM;MACLD,KAAK,CAAC,cAAc,CAAC;IACvB;EACF,CAAC;EAED,oBACEvB,OAAA;IAAMyB,QAAQ,EAAEhB,YAAa;IAAAiB,QAAA,eAE3B1B,OAAA;MAAQ2B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX,CAAC;AAAC5B,EAAA,CApCIF,SAAS;EAAA,QAGIH,WAAW;AAAA;AAAAkC,EAAA,GAHxB/B,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}