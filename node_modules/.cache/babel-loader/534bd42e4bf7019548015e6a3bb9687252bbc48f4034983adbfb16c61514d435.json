{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport InputField from './InputField';\nimport './styles/LoginForm.css';\nimport illustrator from './assets/illustrator.png';\nimport { Link, useNavigate } from 'react-router-dom';\nconst LoginForm = ({\n  setIsLoggedIn\n}) => {\n  _s();\n  // Receive setIsLoggedIn prop\n  // ... (rest of your LoginForm code) ...\n\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        setError(errorData.message || 'Login gagal.');\n      } else {\n        const data = await response.json();\n        console.log('Login berhasil:', data);\n        setIsLoggedIn(true); // Set isLoggedIn to true in App.js\n        navigate('/home');\n      }\n    } catch (error) {\n      setError('Terjadi kesalahan. Silakan coba lagi.');\n      console.error('Error:', error);\n    }\n  };\n\n  // ... (rest of your LoginForm code) ...\n};\n_s(LoginForm, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","InputField","illustrator","Link","useNavigate","LoginForm","setIsLoggedIn","_s","navigate","handleSubmit","e","preventDefault","setError","response","fetch","method","headers","body","JSON","stringify","email","password","ok","errorData","json","message","data","console","log","error","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/sims-ppob-bellamega1/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport InputField from './InputField';\r\nimport './styles/LoginForm.css';\r\nimport illustrator from './assets/illustrator.png';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst LoginForm = ({ setIsLoggedIn }) => { // Receive setIsLoggedIn prop\r\n  // ... (rest of your LoginForm code) ...\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    try {\r\n      const response = await fetch('/api/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        setError(errorData.message || 'Login gagal.');\r\n      } else {\r\n        const data = await response.json();\r\n        console.log('Login berhasil:', data);\r\n        setIsLoggedIn(true); // Set isLoggedIn to true in App.js\r\n        navigate('/home');\r\n      }\r\n    } catch (error) {\r\n      setError('Terjadi kesalahan. Silakan coba lagi.');\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  // ... (rest of your LoginForm code) ...\r\n};\r\n\r\nexport default LoginForm;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,wBAAwB;AAC/B,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAEpD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAAE;EACzC;;EAEA,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAE9B,MAAMK,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACzCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QACvCZ,QAAQ,CAACW,SAAS,CAACE,OAAO,IAAI,cAAc,CAAC;MAC/C,CAAC,MAAM;QACL,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACW,IAAI,CAAC,CAAC;QAClCG,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,IAAI,CAAC;QACpCpB,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QACrBE,QAAQ,CAAC,OAAO,CAAC;MACnB;IACF,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdjB,QAAQ,CAAC,uCAAuC,CAAC;MACjDe,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;;EAED;AACF,CAAC;AAACtB,EAAA,CAhCIF,SAAS;EAAA,QAGID,WAAW;AAAA;AAAA0B,EAAA,GAHxBzB,SAAS;AAkCf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}